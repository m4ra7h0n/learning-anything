@startuml
' 泛化
class son <? extends father>
father <|-- son

' 实现
interface iDog
iDog <|.. Dog : implementation

'依赖
'概念：是一种使用的关系，即一个类的实现需要另一个类的协助。
'java中，方法参数需要传入另一个类的对象，就表示依赖这个类。
B <.. A
A : +void method(B)

' 关联
' 概念：表示类与类之间的联接,它使一个类知道另一个类的属性和方法，这种关系比依赖更强、不存在依赖关系的偶然性、关系也不是临时性的，一般是长期性的。
' java中一个类的全局变量引用了另一个类，就表示关联了这个类
Course "1" <-- "many" Teacher
Teacher : +Course courses

'聚合
'聚合关联关系的一种特例，是强的关联关系。聚合是整体和个体之间的关系，即has-a的关系，整体与个体可以具有各自的生命周期，部分可以属于多个整体对象，也可以为多个整体对象共享。程序中聚合和关联关系是一致的，只能从语义级别来区分；
Student o-- Teacher
Teacher : +Student students

'组合
'概念：组合也是关联关系的一种特例。组合是一种整体与部分的关系，即contains-a的关系，比聚合更强。
'部分与整体的生命周期一致，整体的生命周期结束也就意味着部分的生命周期结束，组合关系不能共享。程序中组合和关联关系是一致的，只能从语义级别来区分。
Human *-- "2" Leg
Human *-- "1" Head

@enduml