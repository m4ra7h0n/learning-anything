spring:
  cloud:
    gateway:
      routes:
        # 下面是predicates 拦截判断条件
        - id: path_route
          uri: http://localhost:8081/say
          predicates:
            - Path=/gateway/** # 请求路径匹配**表示多层 *表示单层

        - id: before_route
          uri: http://localhost:8081/say
          predicates:
            - After=2022-11-12T24:00:00.000+08:00[Asia/Shanghai]

        - id: cookie_route
          uri: http://localhost:8081/say
          predicates:
            - Cookie=name, value   # name: value value可以是正则表达式

        - id: header_route
          uri: http://localhost:8081/say
          predicates:
            - Header=X-Request-Id, \d+   # 一个以上

        - id: host_route
          uri: http://localhost:8081/say
          predicates:
            - Host=127.0.0.1,**.baidu.com  #Ant Path

        - id: method_route
          uri: http://localhost:8081/say
          predicates:
            - Method=GET,POST

        # 下面是过滤器
        - id: add_request_parameter_route
          uri: http://localhost:8081/say
          filters:
            - AddRequestParameter=foo, bar #所有请求添加foo=bar

        - id: add_request_header_route
          uri: http://localhost:8081/say
          filters:
            - AddResponseHeader=X-Response-Foo, Bar

        - id: requestratelimiter_route
          uri: http://localhost:8081/say
          filters:
            - name: RequestRateLimiter  # 限流
              args:
                redis-rate-limiter.replenishRate: 10  #令牌填充速度
                redis-rate-limiter.burstCpacity: 20  #令牌桶容量

        - id: retry_route
          uri: http://localhost:8081/say
          predicates:
            - Path=/gateway/**
          filters:
            - name: retry  # 重试过滤器
              args:
                  retries: 3
                  status: 503
            - StripPrefix=1

        - id: loadbalance_route #负载均衡
          uri: lb://localhost:8081/say
          predicates:
            - Path=/gateway/**

# 全局过滤器